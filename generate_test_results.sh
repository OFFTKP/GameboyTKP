#!/bin/sh
if (( $# != 3 )); then
    echo "This script requires TKPEmu: https://github.com/OFFTKP/TKPEmu"
    >&2 echo "Correct syntax: ./generate_test_results.sh (TKPEmu path) (blargg tests directory) (mooneye-gb tests directory)"
    exit
fi

emu=$1
outf="./TEST_RESULTS.md"
blargg=$2
mooneye=$3

# Delete file contents
>$outf

echo "## [Blargg](https://github.com/gblargg)'s tests:    " >> $outf
echo "Testing blargg directory $blargg"
$emu -T "$blargg/cpu_instrs/individual" -p -g -G $outf
echo "" >> $outf
$emu -T "$blargg/instr_timing" -p -g -G $outf
echo "" >> $outf
$emu -T "$blargg/mem_timing/individual" -p -g -G $outf
echo "" >> $outf
$emu -T "$blargg/dmg_sound/rom_singles" -p -g -G $outf
echo "" >> $outf
$emu -T "$blargg" -p -g -G $outf
echo "" >> $outf
echo "Testing mooneye directory $mooneye"
echo "## [Gekkio](https://github.com/Gekkio)'s tests:    " >> $outf
echo "" >> $outf
$emu -T "$mooneye/acceptance" -p -g -G $outf
echo "" >> $outf
$emu -T "$mooneye/acceptance/bits" -p -g -G $outf
echo "" >> $outf
$emu -T "$mooneye/acceptance/instr" -p -g -G $outf
echo "" >> $outf
$emu -T "$mooneye/acceptance/interrupts" -p -g -G $outf
echo "" >> $outf
$emu -T "$mooneye/acceptance/oam_dma" -p -g -G $outf
echo "" >> $outf
$emu -T "$mooneye/acceptance/ppu" -p -g -G $outf
echo "" >> $outf
$emu -T "$mooneye/acceptance/timer" -p -g -G $outf
echo "" >> $outf
$emu -T "$mooneye/emulator-only/mbc1" -p -g -G $outf
echo "" >> $outf
$emu -T "$mooneye/emulator-only/mbc2" -p -g -G $outf
echo "" >> $outf
$emu -T "$mooneye/emulator-only/mbc5" -p -g -G $outf
echo "" >> $outf
echo "-----" >> $outf
echo "GameboyTKP test results generated by $USER on $(date).    " >> $outf
echo "To generate these test results, use generate_test_results.sh in /GameboyTKP/" >> $outf
